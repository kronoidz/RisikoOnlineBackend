// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RisikoOnline;

namespace RisikoOnline.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210121164042_m4")]
    partial class m4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("RisikoOnline.Entities.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Accepted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("TEXT");

                    b.Property<string>("SenderName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverName");

                    b.HasIndex("SenderName");

                    b.ToTable("Invitation");
                });

            modelBuilder.Entity("RisikoOnline.Entities.Player", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Name");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("RisikoOnline.Entities.Invitation", b =>
                {
                    b.HasOne("RisikoOnline.Entities.Player", "Receiver")
                        .WithMany("IncomingInvitations")
                        .HasForeignKey("ReceiverName");

                    b.HasOne("RisikoOnline.Entities.Player", "Sender")
                        .WithMany("OutgoingInvitations")
                        .HasForeignKey("SenderName");

                    b.Navigation("Receiver");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("RisikoOnline.Entities.Player", b =>
                {
                    b.Navigation("IncomingInvitations");

                    b.Navigation("OutgoingInvitations");
                });
#pragma warning restore 612, 618
        }
    }
}
